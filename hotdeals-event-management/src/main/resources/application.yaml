# How to display auto-configuration report when running a Spring Boot application
#debug: true

# ----------------------------------------
# Spring info
# ----------------------------------------
spring:
  application:
    name: '@artifactId@'

  devtools:
    restart:
      enabled: true
      exclude: '**/*.sql,META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties,META-INF/build-info.properties'

  # Expose management beans to the JMX domain.
  jmx:
    enabled: false

  main:
    allow-bean-definition-overriding: true

  messages:
    # Whether to always apply the MessageFormat rules, parsing even messages without arguments.
    always-use-message-format: false

    # Comma-separated list of basenames (essentially a fully-qualified classpath location), each following the ResourceBundle convention with relaxed support for slash based locations.
    basename: classpath:messages/response

    # Message bundles encoding.
    encoding: UTF-8

  # Spring MVC
  mvc:
    # 404 에러를 ControllerAdvice에서 처리할 수 있도록 설정
    throw-exception-if-no-handler-found: true

  # Spring Profiles, 리스트로 등록
  profiles:
    include:
    - config
#    - kafka
    - redis
    - cassandra

  # thymeleaf
  thymeleaf:
    cache: false    check-template-location: true
    mode: HTML5
    encoding: UTF-8
    prefix: classpath:templates/
    suffix: .html

# ----------------------------------------
# Application info
# ----------------------------------------
info:
  application:
    env: '${spring.profiles.active:@env@}'
    group: '@groupId@'
    artifact: '@artifactId@'
    version: '@version@'
    name: '@name@'
    description: '@description@'

# ----------------------------------------
# Logging config file
# ----------------------------------------
logging:
  config: classpath:logback-spring.xml

# ----------------------------------------
# Actuator properties
# ----------------------------------------
management:
  endpoints:
    web:
      base-path : /actuator
      exposure:
        include:
          - health
          - info

# ----------------------------------------
# Server info
# ----------------------------------------
server:
  compression:
    enabled: false
  error:
    whitelabel:
      enabled: false
  port: ${PORT:8080}
  servlet:
    context-path: '/'

# Coupon Server URL
coupon.server.url: http://localhost:8088/api/v1/event/coupon

---
# 개발 배포
spring:
  profiles: dev

logging:
  config: classpath:logback-spring-dev.xml

server:
  # Tomcat access logs
  tomcat:
    accesslog:
      enabled: true
      directory: /logs
      pattern: '%h %{X-Forwarded-For}i %l %u [%{yyyy-MM-dd HH:mm:ss}t] "%{Host}i" "%r" %s %b "%{Referer}i" "%{User-Agent}i" TIME:%T'
      prefix: access

# Coupon Server URL
coupon.server.url: http://hotdeals-coupon-management-service:8080/api/v1/event/coupon

---
# 상용 배포
spring:
  profiles: prod

logging:
  config: classpath:logback-spring-prod.xml

server:
  # Tomcat access logs
  tomcat:
    accesslog:
      enabled: true
      directory: /logs
      pattern: '%h %{X-Forwarded-For}i %l %u [%{yyyy-MM-dd HH:mm:ss}t] "%{Host}i" "%r" %s %b "%{Referer}i" "%{User-Agent}i" TIME:%T'
      prefix: access

# Coupon Server URL
coupon.server.url: http://hotdeals-coupon-management-service:8080/api/v1/event/coupon

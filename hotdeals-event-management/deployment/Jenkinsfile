def label = "hotdeals-event-management-${UUID.randomUUID().toString()}"

podTemplate(label: label,
    containers: [
        containerTemplate(name: 'maven', image: 'maven:3.3.9-jdk-8-alpine', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'docker', image: 'docker:stable', ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl:latest', command: 'cat', ttyEnabled: true)
    ], volumes: [hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock')]
) {
    node(label) {
        stage('Get Source') {
            git branch: 'develop', credentialsId: '', url: 'https://github.com/sky01126/hotdeals.git'
        }

        def pom                 = readMavenPom file: 'pom.xml'
        def props               = readProperties file:'hotdeals-event-management/deployment/pipeline.properties'

        def namespace           = props['namespace']
        def dockerHub           = props['dockerHub']
        def dockerRegistry      = props['dockerRegistry']
        def dockerRepository    = props['dockerRepository']
        def dockerImage         = pom.artifactId
        def dockerVersion       = pom.version

        def service             = props['service']
        def deployment          = props['deployment']
        def selector            = pom.artifactId

        stage('Build Maven project') {
            container('maven') {
                sh "echo ${namespace}"
                sh "echo ${dockerHub}"
                sh "echo ${dockerRegistry}"
                sh "echo ${dockerRepository}/${dockerImage}:${dockerVersion}"
            }
        }
    }
}
